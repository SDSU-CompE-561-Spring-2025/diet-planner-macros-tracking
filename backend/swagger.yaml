openapi: 3.0.0
info:
  title: AI-Driven Meal Planner API
  description: API for the AI-Driven Meal Planner project
  version: 1.0.0
servers:
  - url: http://localhost:8000
paths:
  /api/user/:
    post:
      summary: Authenticate a user and return a token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Successful authentication
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  token:
                    type: string
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /api/meals/:
    post:
      summary: Add a meal to the user's meal list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                ingredients:
                  type: string
                calories:
                  type: integer
      responses:
        "200":
          description: Meal added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  meal:
                    type: object
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /api/meal-plans/:
    post:
      summary: Create a new meal plan for the user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                mealPlan:
                  type: array
                  items:
                    type: object
                    properties:
                      meal:
                        type: string
                      day:
                        type: string
                      time:
                        type: string
      responses:
        "200":
          description: Meal plan created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /api/shopping-list/:
    post:
      summary: Create a shopping list based on the user's meals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                items:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      quantity:
                        type: integer
      responses:
        "200":
          description: Shopping list created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /api/nutrition/:
    post:
      summary: Get nutrition details for a given food item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                food:
                  type: string
                quantity:
                  type: integer
      responses:
        "200":
          description: Nutrition details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  nutrition:
                    type: object
                    properties:
                      calories:
                        type: integer
                      protein:
                        type: integer
                      fat:
                        type: integer
                      sugars:
                        type: integer
                      carbs:
                        type: integer
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
  /api/restaurants/nearby:
    get:
      summary: Get a list of nearby restaurants based on location and optional filters
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
        - name: cuisine
          in: query
          schema:
            type: string
        - name: price
          in: query
          schema:
            type: string
      responses:
        "200":
          description: List of nearby restaurants retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  restaurants:
                    type: array
                    items:
                      type: object
        "400":
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  error:
                    type: string
        "500":
          description: Failed to fetch data from Yelp
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  status_code:
                    type: integer
